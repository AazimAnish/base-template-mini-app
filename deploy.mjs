import { createWalletClient, http, createPublicClient } from 'viem';
import { baseSepolia } from 'viem/chains';
import { privateKeyToAccount } from 'viem/accounts';
import fs from 'fs';
import path from 'path';

// Private key from your wallet
const PRIVATE_KEY = '0xf48e848b898696de810f616debf149eab29088f0838063e139945e7d5cb8531f';

// Create account from private key
const account = privateKeyToAccount(PRIVATE_KEY);

// Create clients
const publicClient = createPublicClient({
  chain: baseSepolia,
  transport: http()
});

const walletClient = createWalletClient({
  account,
  chain: baseSepolia,
  transport: http()
});

// Contract bytecode - this needs to be compiled first
const CONTRACT_BYTECODE = `
608060405234801561001057600080fd5b50611234806100206000396000f3fe6080604052348015610010575f5ffd5b50600436106100b8575f3560e01c80632e1a7d4d1161007b5780632e1a7d4d146101425780635aa6e6751461015557806370a082311461016857806378e979251461017b578063854cff2f1461018e578063adbf2944146101a15f5ffd5b8063021947ff146100bd5780630480e58b146100d2578063078dfbe7146100e55780631e83409a146100f85780631f903037146101155780632c4e722e14610128575b5f5ffd5b6100d06100cb366004610e5a565b6101b4565b005b6100d06100e0366004610ea6565b610312565b6100f86100f3366004610ea6565b610534565b6040516100ff9190610eca565b60405180910390f35b61010b610106366004610ea6565b61075b565b6040516100ff94939291906110ca565b6101286101233660046110fd565b6107b2565b6040516100ff919061112b565b61013b610136366004610ea6565b610820565b6040516100ff9190611179565b6100d0610150366004610ea6565b6108a1565b6100d06101633660046111b7565b610a5c565b61013b610176366004611249565b610b9e565b6100d0610189366004610ea6565b610bc7565b61019161019c366004610e5a565b610d3c565b6040516100ff94939291906112f4565b6100d06101af366004611327565b610daa565b5f82815260208190526040902054819060ff166101e25760405162461bcd60e51b81526004016101d990611371565b60405180910390fd5b5f8281526020819052604090206001015461010090046001600160a01b0316331461021f5760405162461bcd60e51b81526004016101d990611398565b5f82815260208190526040812060010154610100900460ff169081600581111561024b5761024b610eb0565b1461026b57604051628416d160e31b815260040160405180910390fd5b5f8381526020818152604091829020600401805484516002600183161561010002600019011604601f810184900484028201840190955284815291936001600160a01b03909116926001600160801b031691908590859081908401838280828437505f9201829052509394505050505b9392505050565b60405162461bcd60e51b8152600401610308906113c4565b60405180910390fd5b5f82815260208190526040902054819060ff166103415760405162461bcd60e51b81526004016101d990611371565b5f8281526020819052604090206001015461010090046001600160a01b0316331461037e5760405162461bcd60e51b81526004016101d990611398565b5f8281526020819052604090206005015460ff1615156001146103b25760405162461bcd60e51b81526004016101d9906113f7565b5f8381526020819052604090206001015461010090046001600160a01b031633146103ef5760405162461bcd60e51b81526004016101d99061141f565b5f83815260208181526040918290206005805460ff191690556006018054825181850281018501909352808352919290919083018282801561044957602002820191905f5260205f20905b815481526020019060010190808311610435575b505050505090505f81600181518110610464576104646114f5565b60200260200101519050601e8111156105305782600181518110610489576104896114f5565b602002602001015160019003925060038160405160240161050c91906020808252601f908201527f53656c662d646573747275637420696e76616c696420696e707574206572726f00604082015260600190565b60408051601f198184030181529190526020810180516001600160e01b031663a9059cbb60e01b17905290505b5050505050565b61053c610e0c565b5f82815260208190526040902054829060ff166105725760405162461bcd60e51b81526004016101d990611371565b5f838152602081815260409182902084518154878401516060880151608089015160a08a015160c08b0151958c0151959a50919892979394929360018301949293909290916001600160801b0390911691906001600160a01b0390811691906002810180548551818502810185019096528086526001600160801b039091169594939092919083018282801561061c57602002820191905f5260205f20905b815481526020019060010190808311610608575b50505050509250955095509550955095509550509193509193565b5f818152602081905260409020546060919060ff166106695760405162461bcd60e51b81526004016101d990611371565b5f8281526020819052604081206005015481906002810154600185015460c087015160e088015161014089015191926001600160801b03909116918251869182111561070e575f8083526020832080546001810182559084529190922081018290556106cf838361164d565b92508060405160240161070191906020808252601f908201527f53656c662d646573747275637420696e76616c696420696e707574206572726f00604082015260600190565b60405180910390fd5b60016040516024016106cf919061166d565b5f82815260208190526040902054829060ff166107515760405162461bcd60e51b81526004016101d990611371565b5f83815260208181526040918290208451815487840151606088015160808901516001600160a01b039485166002909101805473ffffffffffffffffffffffffffffffffffffffff1916929094169190911790925560a089015160c08a015194989296509490930192506107d7919065ffffffffffff166001600160801b0391909116906116a5565b60405180910390a15050505050565b5f81815260208190526040902054606090819060ff166108185760405162461bcd60e51b81526004016101d990611371565b5f838152602081905260409020600501549250915050565b5f81815260208190526040902054606090819060ff166108525760405162461bcd60e51b81526004016101d990611371565b505f8181526020818152604091829020600501805483518184028101840190945280845290918301828280156108925750505050565b50919550919350505050565b5f81815260208190526040902054819060ff166108cd5760405162461bcd60e51b81526004016101d990611371565b5f8281526020819052604090206001015461010090046001600160a01b0316331461090a5760405162461bcd60e51b81526004016101d990611398565b5f8281526020819052604090206005015460ff161515600114610947576040516330f8cf4560e11b815260040160405180910390fd5b5f8281526020819052604090206005015460ff161515600114610984576040516330f8cf4560e11b815260040160405180910390fd5b5f828152602081905260409020600501546109a19060019061170a565b5f8381526020819052604081206005805460ff1916905560060180546001808201835591835291206005850154600282015491929091016109eb919065ffffffffffff166001600160801b0391909116906116a5565b82815260405190819033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef905f90a38181036005830180548392906001600160801b031660010191906101000a8154816001600160801b030219169083600f0b6001600160801b0316021790555050505050565b5f82815260208190526040902054819060ff16610a8b5760405162461bcd60e51b81526004016101d990611371565b5f838152602081815260409182902060050154915163a9059cbb60e01b815233600482015260248101919091526044810188905273__$b4edc83ca1b5e95c4e3d5ea9c7b41a4365$__9063a9059cbb90606401602060405180830381865af4158015610af6573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b1a919061173a565b610b665760405162461bcd60e51b815260206004820152601b60248201527f5472616e73666572206661696c6564206f7220756e646566696e656400000000604482015260640161030f565b8560405160240161070191906020808252601f908201527f53656c662d646573747275637420696e76616c696420696e707574206572726f00604082015260600190565b80516020820135905f82815260208181526040918290206005015492516001600160a01b039091169082905230905f90a350565b5f81815260208190526040902054819060ff16610bf65760405162461bcd60e51b81526004016101d990611371565b5f8281526020819052604090206001015461010090046001600160a01b03163314610c335760405162461bcd60e51b81526004016101d990611398565b5f8281526020819052604090206005015460ff1615156001148015610c685750601e815111155b610cb45760405162461bcd60e51b815260206004820152601c60248201527f496e76616c6964206d696e696d756d20706c6179657220636f756e7400000000604482015260640161030f565b5f8281526020819052604081206001015460038201546005820154610cea929161010090046001600160a01b03169190849061174f565b90505f8160405160240161070191906020808252601f908201527f53656c662d646573747275637420696e76616c696420696e707574206572726f00604082015260600190565b610d44610e0c565b5f82815260208190526040902054829060ff16610d735760405162461bcd60e51b81526004016101d990611371565b5f838152602081815260409182902080546001015460058301546006840180548851818502810185019099528089526001600160a01b0385169761010090049096169593949092919083018282801561061c57602002820191905f5260205f20905b815481526020019060010190808311610dc1575b505050505092509193509193565b5f82815260208190526040902054819060ff16610dd95760405162461bcd60e51b81526004016101d990611371565b5f838152602081905260409020600501548390610e0190600190612710565b50505050565b604051806101000160405280610e1b610e0c565b815260200160608152602001610e2f610e0c565b815260200160608152602001610e43610e0c565b8152602001606081526020015f81525090565b5f5f60408385031215610e68575f5ffd5b50508035926020909101359150565b80356001600160a01b0381168114610e8d575f5ffd5b919050565b5f5f60408385031215610ea3575f5ffd5b610eac83610e77565b9150602083013567ffffffffffffffff811115610ec7575f5ffd5b8301601f81018513610ed7575f5ffd5b803567ffffffffffffffff811115610eed575f5ffd5b602082019150610f0184602083016116a5565b9091525f818152602081905260409020549392505050565b5f5f60408385031215610f2a575f5ffd5b82359150602083013567ffffffffffffffff811115610f47575f5ffd5b8301601f81018513610f57575f5ffd5b805167ffffffffffffffff811115610f6d575f5ffd5b602082019150610f8184602083016116a5565b9091525f81815260208190526040902054939250505056fea26469706673582212201234567890123456789012345678901234567890123456789012345678901234564736f6c63430008130033
`.trim();

async function deployContract() {
  try {
    console.log('üöÄ Starting contract deployment...');
    console.log('Account:', account.address);
    
    // Check balance
    const balance = await publicClient.getBalance({
      address: account.address
    });
    console.log('Balance:', balance.toString(), 'wei');

    if (balance === 0n) {
      console.error('‚ùå Account has no balance. Please fund it with Base Sepolia ETH');
      console.log('Faucet: https://www.coinbase.com/faucets/base-ethereum-sepolia-faucet');
      return;
    }

    // Since we need to compile the contract, let's use a simpler approach
    // We'll deploy using a pre-compiled bytecode or compile using solc
    console.log('‚ö†Ô∏è  Contract compilation needed. Please use Remix IDE for deployment:');
    console.log('1. Go to https://remix.ethereum.org');
    console.log('2. Create new file: SUSGame.sol');
    console.log('3. Copy contract from contracts/SUSGame.sol');
    console.log('4. Compile and deploy to Base Sepolia');
    console.log('5. Use this account:', account.address);
    console.log('6. Private key (for MetaMask):', PRIVATE_KEY);
    
    return;

  } catch (error) {
    console.error('‚ùå Deployment failed:', error);
  }
}

deployContract();